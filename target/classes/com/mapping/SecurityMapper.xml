<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.SecurityMapper" >
  <resultMap id="BaseResultMap" type="com.pojo.Security" >
    <id column="securityid" property="securityid" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="securityname" property="securityname" jdbcType="VARCHAR" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="phonenumber" property="phonenumber" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="idnumber" property="idnumber" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="userroleid" property="userroleid" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    securityid, password, securityname, photo, address, phonenumber, birthday, idnumber, 
    gender, age, userroleid, flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from security
    where securityid = #{securityid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from security
    where securityid = #{securityid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pojo.Security" >
    insert into security (securityid, password, securityname, 
      photo, address, phonenumber, 
      birthday, idnumber, gender, 
      age, userroleid, flag
      )
    values (#{securityid,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{securityname,jdbcType=VARCHAR}, 
      #{photo,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=DATE}, #{idnumber,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{age,jdbcType=INTEGER}, #{userroleid,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.Security" >
    insert into security
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="securityid != null" >
        securityid,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="securityname != null" >
        securityname,
      </if>
      <if test="photo != null" >
        photo,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="phonenumber != null" >
        phonenumber,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="idnumber != null" >
        idnumber,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="userroleid != null" >
        userroleid,
      </if>
      <if test="flag != null" >
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="securityid != null" >
        #{securityid,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="securityname != null" >
        #{securityname,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="idnumber != null" >
        #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="userroleid != null" >
        #{userroleid,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.Security" >
    update security
    <set >
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="securityname != null" >
        securityname = #{securityname,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        phonenumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="idnumber != null" >
        idnumber = #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="userroleid != null" >
        userroleid = #{userroleid,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where securityid = #{securityid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.Security" >
    update security
    set password = #{password,jdbcType=VARCHAR},
      securityname = #{securityname,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phonenumber = #{phonenumber,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      idnumber = #{idnumber,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      userroleid = #{userroleid,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER}
    where securityid = #{securityid,jdbcType=INTEGER}
  </update>
</mapper>