<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.LoginRecordMapper" >
  <resultMap id="BaseResultMap" type="com.pojo.LoginRecord" >
    <id column="recordid" property="recordid" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="logintime" property="logintime" jdbcType="TIMESTAMP" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="area" property="area" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    recordid, content, ip, logintime, username, area, flag
  </sql>
  
  <select id="getInformationByUserName" resultMap="BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from loginrecord
    where username = #{username,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from loginrecord
    where recordid = #{recordid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from loginrecord
    where recordid = #{recordid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pojo.LoginRecord" >
    insert into loginrecord (recordid, content, ip, 
      logintime, username, area, 
      flag)
    values (#{recordid,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{logintime,jdbcType=TIMESTAMP}, #{username,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, 
      #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.LoginRecord" >
    insert into loginrecord
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordid != null" >
        recordid,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="logintime != null" >
        logintime,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="area != null" >
        area,
      </if>
      <if test="flag != null" >
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordid != null" >
        #{recordid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null" >
        #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="area != null" >
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.LoginRecord" >
    update loginrecord
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null" >
        logintime = #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="area != null" >
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where recordid = #{recordid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.LoginRecord" >
    update loginrecord
    set content = #{content,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      logintime = #{logintime,jdbcType=TIMESTAMP},
      username = #{username,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER}
    where recordid = #{recordid,jdbcType=INTEGER}
  </update>
</mapper>